import * as tomato from "@po-to/tomato";
import * as tdom from "@po-to/tomato-jquery";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as api from "views/global/common/API";
import * as model from "views/global/common/Model";
import * as Vue from 'vue';
import * as demand from 'nodejs/global/model/demand';
import PayADeposit = require('views/m/grab/PayADepositModal');
import UpdateSupplierInfo = require('views/m/user/UpdateSupplierInfo');

class VPresenter extends project.VPresenter {
    private proInfo: any;
    private flag_html: string;
    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        this.flag_html = "";
        this._watchEvent();
        this._els = this._getElements();
        var that = this;

        //详情页渲染
        var v_details = this.find('.details')[0];
        var data = model.globalData;
        this.proInfo = new Vue({
            el: v_details,
            data: data,
            methods: {
                updateTime: function (startTime) {
                    startTime = startTime + '';
                    var text;
                    // var stime = new Date(startTime).getTime();//转换
                    var stime = startTime * 1000;
                    var date = new Date().getTime();
                    var gapMin = Math.floor((date - stime) / 1000 / 60);
                    if (gapMin <= 0) {
                        //防止偶尔出现的js取时间不准确
                        gapMin = 1;
                    }
                    var gapHour = Math.floor((date - stime) / 1000 / 60 / 60);

                    if (gapHour <= 24) {
                        text = gapHour + '小时前';
                        if (gapMin < 60) {
                            text = gapMin + '分钟前';
                        }
                    } else if (gapHour <= 24 * 30) {
                        gapHour = Math.floor(gapHour / 24);
                        text = gapHour + '天前'
                    } else if (gapHour <= 24 * 30 * 12) {
                        gapHour = Math.floor(gapHour / 24 / 30);
                        text = gapHour + '个月前'
                    } else {
                        //防止意外情况，暂时如此处理
                        text = '刚刚'
                    }
                    return text;
                },
                iJoined: function (list: any[]) {
                    return list.some(function (item) {
                        return item.id == model.globalData.user.user_id;
                    })
                }
            },

        });
        // 通过链接直接打开聊天室，或聊天室刷新页面，则等到im初始化完成再调用聊天时初始化方法！！！草！！！
        $(document.body).on('imInit', function () {
            // 支付宝跳转回来的链接，自动进行抢单操作！！！
            var href = window.location.href;
            if (href.indexOf('fromAlipay') > 0) {
                // 如果已经抢过单，则不处理
                if (model.globalData.current_demand.supplier_partic_status == "10" || model.globalData.current_demand.supplier_partic_status == '200') {
                    return
                }
                // 自动触发抢单！
                tomato.getVPresenter<PayADeposit>(funs.moduleToUrl('m/grab/PayADepositModal'), (PayADeposit) => {
                    PayADeposit._evt_ensure(true);
                });
            }
        })
        this._setDetailHeight();
    }
    /**重设详情界面的高度*/
    _setDetailHeight() {
        var phoneH = document.documentElement.clientHeight || $(window).height();
        var topBarH = this.find('.commonTopBar').innerHeight();
        var aaa = phoneH - topBarH;
        this.find('.details').css('height', aaa + 'px');
    };
    /*==============录音音频处理-start=============*/
    //录音播放暂停
    _evt_playPause(data, target) {
        var that = this;
        //如果录音加载失败
        var audioTime = this.find('.audio-time');
        var audio: any = document.getElementById("audioTag");
        if (audio.paused) {
            audio.play();
            //改变icon
            $(target).find('span').removeClass('icon-play-one').addClass('icon-pause-one')
        } else {
            audio.pause();
            $(target).find('span').removeClass('icon-pause-one').addClass('icon-play-one')
        }

        //监听音频播放时间并更新进度条
        audio.addEventListener('timeupdate', that.updateProgress, false);
        //监听播放完成事件
        audio.addEventListener('ended', that.audioEnded, false);
    };

    //更新进度条
    updateProgress() {
        var audio = document.getElementsByTagName('audio')[0];
        this.find('.audio-time').html(this.transTime(audio.duration - audio.currentTime));
    }
    //播放完成
    audioEnded() {
        var audio = document.getElementsByTagName('audio')[0];
        audio.currentTime = 0;
        audio.pause();
        this.find('.play-pause>span').removeClass('icon-pause-one').addClass('icon-play-one');
    }
    //转换音频时长格式
    transTime(time) {
        var duration = parseInt(time);
        var minute: any = Math.floor(duration / 60);
        var sec = duration % 60 + '';
        var isM0 = ':';
        if (minute == 0) {
            minute = '00';
        } else if (minute < 10) {
            minute = '0' + minute;
        }
        if (sec.length == 1) {
            sec = '0' + sec;
        }
        return minute + isM0 + sec
    }
    /*==============录音音频处理-end=============*/

    //点击查看大图
    _evt_scanBig(data, obj) {
        var src = $(obj).attr('src');
        var width = $(obj).width();
        var height = $(obj).height();
        var rate = width / height;//宽高比
        var hh = $(window).width();//大图的宽 == 屏幕宽度
        var bgh = hh / rate / 2;  // 计算出大图的高度 de 一半

        //dom插入
        var bigImg = '<div class="bigImgBg" evt="closeBigImg"><img class="bigImg" src="' + src + '"/></div>';
        $(this.view).append(bigImg);

        //让图片垂直居中
        $('.bigImg').css('margin-top', -bgh + 'px');
    };
    _evt_closeBigImg(data, obj) {
        $(obj).remove();
    };
    /*================抢单逻辑－start===============*/
    _evt_grab() {
        var that = this;
        let userInfo = model.globalData.user;
        let demandInfo = model.globalData.current_demand;
        if (userInfo.user_type == 100) {
            if (userInfo.avatar) {
                /** 暂时不需要工程商缴费，所以，此处正常逻辑先屏蔽 */
                // tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/grab/PayADepositModal'), (PayADepositModal) => {
                //     tdom.open(PayADepositModal, tdom.DialogTarget.Blank, {
                //         size: { width: '90%', height: tomato.DialogSize.Content },
                //         masked: true,
                //     });
                // });
                /** 暂时不需要工程商缴费，所以，此处正常逻辑先屏蔽 */

                // 临时逻辑－ start- /
                //抢单
                api.grabDemand({ "demand_id": demandInfo.id }, function (json) {
                    // 更新项目信息
                    var curr_pro = model.globalData.current_demand;
                    curr_pro.supplier_partic_status = json.demand_info.supplier_partic_status;
                    curr_pro.supplier_list = json.demand_info.partic_supplier_list;
                    curr_pro.bid_cnt = json.demand_info.demand.bid_cnt;
                    curr_pro.status = json.demand_info.demand.status;
                    curr_pro.user.phone = json.demand_info.user.mobile;

                    var pro_list = model.globalData.project_list;
                    // 更新项目列表中此项目的信息
                    for (var i = 0; i < pro_list.length; i++) {
                        if (curr_pro.id == pro_list[i].id) {
                            pro_list[i] = curr_pro;
                            break;
                        }
                    }
                    // 更新参与项目列表信息
                    let joined_list = model.globalData.joined_list;
                    let hasPro = false;
                    for (var i = 0; i < joined_list.length; i++) {
                        if (curr_pro.id == joined_list[i]) {
                            joined_list[i] = $.extend(joined_list[i], curr_pro);
                            hasPro = true;
                        }
                    }
                    if (!hasPro) {
                        joined_list.push(curr_pro);
                    }
                    // 自动拨打电话
                    window.location.href = 'tel:' + curr_pro.user.phone;
                },
                    function (data: tomato.PError) {
                        //如果请求失败,刷新当前
                        funs.tip('请求失败，请重试', data.note, 'fail');
                    })
                // 临时逻辑－ end- /
            } else {
                //弹出完善个人资料信息弹窗
                tomato.getVPresenter<UpdateSupplierInfo>(funs.moduleToUrl('m/user/UpdateSupplierInfo'), (UpdateSupplierInfo) => {
                    UpdateSupplierInfo.setType('1');
                    tdom.open(UpdateSupplierInfo, tdom.DialogTarget.Blank, {
                        size: { width: '90%', height: tomato.DialogSize.Content },
                        masked: true,
                    });
                });
            }
        } else {
            //当前登录信息与前端逻辑不合，直接刷新
            window.location.reload();
        }
    }
    /**打开聊天室 */
    _evt_onlineChat(id: string) {
        var user_id = id;
        tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/ChatRoom'), (ChatRoom) => {
            if (ChatRoom.vpid.indexOf('uid=') > 0) {
                ChatRoom.vpid = ChatRoom.vpid.replace(/\?(uid=\d*)?/, '?uid=' + user_id);
            } else {
                ChatRoom.vpid += '?uid=' + user_id;
            }
            funs.loadPage(ChatRoom);
        });
    }
    /**获取单个项目的详细信息 */
    getProjectData(did: string): demand.DemandInfo | undefined {
        for (let a of model.globalData.project_list) {
            if (a.id == did) {
                return a
            }
        }
    }
    /**打开个人主页 */
    _evt_openPersonalHomepage(id: string) {
        // var pro_info = this.getProjectData(id);
        // if (pro_info) {
        // model.globalData.current_demand = pro_info;
        tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/project/PersonalHomePage'), (PersonalHomePage) => {
            //弹出详情页
            funs.loadPage(PersonalHomePage)
        })
        // }
    }
    /**=======================点赞---有用  开始=====================*/
    _evt_thumbsUp(id: string, data, target, hit) {
        var demand_id = id;
        //当前id项目的所有信息
        var pro_info = model.globalData.current_demand;
        //修改选中类型
        var that = this;
        var name = data.innerHTML;
        var flag = parseInt($(data).attr("flag"));
        var icon = $(data).attr("icon");
        if (!pro_info) {
            return;
        }
        var voteInfo = {
            id: demand_id,
            type: flag//投票类型，1：顶；2：踩；
        };
        if (pro_info.vote_type == 0) {
            //顶
            api.Vote(voteInfo, function (json) {
                // pro_info = json as any;
                that.resetDemand(json);

                $(data).find('span').attr('class', $(data).find('span').attr('class') + '-copy');
            }, function () {
                //fail
            })
        }
        if (pro_info.vote_type == flag) {
            //取消
            api.Unvote(voteInfo, function (json) {
                that.resetDemand(json);

                that.find('.useful span').attr("class", "icon-youyong");
                that.find('.useless span').attr("class", "icon-meiyong");
            }, function () {
                //fail
            })
        }
    }
    resetDemand(json) {
        if (model.globalData.current_demand.id == json.id) {
            model.globalData.current_demand.vote_up = json.vote_up;
            model.globalData.current_demand.vote_down = json.vote_down;
            model.globalData.current_demand.vote_type = json.vote_type;
        }
        for (let a of model.globalData.project_list) {
            if (a.id == json.id) {
                a.vote_up = json.vote_up;
                a.vote_down = json.vote_down;
                a.vote_type = json.vote_type;
            }
        }
        for (let a of model.globalData.currUserDemandList) {
            if (a.id == json.id) {
                a.vote_up = json.vote_up;
                a.vote_down = json.vote_down;
                a.vote_type = json.vote_type;
            }
        }
    }
    /**=======================点赞---有用  结束=====================*/

    // 页面卸载事件
    _afterUninstallTo() {
        // 如果录音存在，离开洽谈室时重置录音播放；
        if (model.globalData.current_demand.audio) {
            this.audioEnded()
        }
    }
}
export = VPresenter;