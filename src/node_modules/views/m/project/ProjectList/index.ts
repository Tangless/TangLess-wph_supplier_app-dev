import * as tomato from "@po-to/tomato";
import * as tdom from "@po-to/tomato-jquery";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as model from "views/global/common/Model";
import * as demand from 'nodejs/global/model/demand';
import * as api from "views/global/common/API";
import DemandDetail = require('views/m/DemandDetail');
import * as Vue from 'vue';
import * as auiPullToRefresh from 'auiPullToRefresh';
import UpdateSupplierInfo = require('views/m/user/UpdateSupplierInfo');

class VPresenter extends project.VPresenter {
    private flag_html: string;
    private _loadMore: boolean;
    private _moreLoading: JQuery;
    private _outerScroller: JQuery;
    private _vote_supplier: number;

    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        this.flag_html = "";

        var that = this;
        that._vote_supplier = 0;
        new Vue({
            el: $("#ProjectList-container")[0],
            data: {
                items: model.globalData.project_list,
                vote_supplier: that._vote_supplier,
            },
            methods: {
                updateTime: function (startTime) {
                    startTime = startTime + '';
                    var text;
                    // var stime = new Date(startTime).getTime();//转换
                    var stime = startTime * 1000;
                    var date = new Date().getTime();
                    var gapMin = Math.floor((date - stime) / 1000 / 60);
                    if (gapMin <= 0) {
                        //防止偶尔出现的js取时间不准确
                        gapMin = 1;
                    }
                    var gapHour = Math.floor((date - stime) / 1000 / 60 / 60);

                    if (gapHour <= 24) {
                        text = gapHour + '小时前';
                        if (gapMin < 60) {
                            text = gapMin + '分钟前';
                        }
                    } else if (gapHour <= 24 * 30) {
                        gapHour = Math.floor(gapHour / 24);
                        text = gapHour + '天前'
                    } else if (gapHour <= 24 * 30 * 12) {
                        gapHour = Math.floor(gapHour / 24 / 30);
                        text = gapHour + '个月前'
                    } else {
                        //防止意外情况，暂时如此处理
                        text = '刚刚'
                    }
                    return text;
                },
                iJoined: function (list: any[]) {
                    return list.some(function (item) {
                        return item.id == model.globalData.user.user_id;
                    })
                },
                callStop: function (event) {
                    event.stopPropagation();    //  阻止事件冒泡
                }
            },

        })
        this._moreLoading = this.find(".downMore");
        this._outerScroller = this.find(".outerScroller");
        //存项目列表id的cookie
        if (model.globalData.project_list.length != 0) {
            funs.setCookie("demandLists_id", model.globalData.project_list[0].id);
        }
        //下拉刷新插件
        var a = auiPullToRefresh;
        var pullRefresh = new auiPullToRefresh({
            container: document.querySelector('.aui-refresh-content'),
            triggerDistance: 100,
            // "pullImage": "../image/pull_refresh.png", //下拉时显示的图片，带旋转
            // "loadingImage": "../images/loading.gif", //加载中的图片
            // "callback": loadingCallback //刷新回调
        }, function (ret) {
            if (ret.status == "success") {
                //刷新回调
                that.loadMore();
                pullRefresh.cancelLoading(); //刷新成功后调用此方法隐藏
            }
        })
        // 特殊处理 台湾省 ， 更新列表
        if (model.globalData.user.prov == "台湾省") {
            model.globalData.selected_province.province_id = "台湾省";
            model.globalData.selected_province.province_name = "台湾省";
            api.GetDemandList({ "sort_val": '' }, function (data) {
                model.globalData.project_list.length = 0;
                model.globalData.project_list.push(...data);
            }, function () {
                // 不处理
            })
        }
        this._watchEvent();

    }
    /**加载更多 */
    private loadMore() {
        if (this._loadMore) { return; }
        this._loadMore = true;
        this._moreLoading.removeClass("hide");
        var next = () => {
            this._loadMore = false;
            this._moreLoading.addClass("hide");
            this.find(".promptBar").removeClass('hide');
            this._outerScroller.scrollTop(0);
            setTimeout(() => {
                this.find('.promptBar').addClass('hide');
            }, 3000);
        }
        var plist = model.globalData.project_list;
        var sort_val;
        if (plist.length == 0) {
            sort_val = "";
        } else {
            sort_val = plist[0].id;
        }
        api.GetDemandList({ "sort_val": sort_val }, (data) => {
            var newList = data;
            if (newList.length != 0) {
                console.log("newList.length=============" + newList.length);
                this.find(".promptBar").text("更新了" + newList.length + "条新状态");
                //向前插入数据
                model.globalData.project_list.unshift(...newList);
                setTimeout(next, 1000);
            } else {
                this.find(".promptBar").text("暂无更新");
                setTimeout(next, 1000);
            }
        }, () => {

            setTimeout(next, 3000);
        });
    }
    /**项目的点击事件 */
    _evt_projectDetail(id: string) {
        var pro_info = this.getProjectData(id);
        if (pro_info) {
            model.globalData.current_demand = pro_info;
            var flag = model.globalData.demand.id == model.globalData.current_demand.id;
            model.globalData.currIsSelfDemand = flag;
            tomato.getVPresenter<DemandDetail>(funs.moduleToUrl('m/DemandDetail'), (DemandDetail) => {
                //弹出详情页
                if (DemandDetail.vpid.indexOf('demand=') > 0) {
                    DemandDetail.vpid = DemandDetail.vpid.replace(/\?(demand=\d*)?/, '?demand=' + (pro_info as any).id);
                } else {
                    DemandDetail.vpid += '?demand=' + (pro_info as any).id;
                }
                funs.loadPage(DemandDetail)
            })
        }
    }
    /**获取单个项目的详细信息 */
    getProjectData(did: string): demand.DemandInfo | undefined {
        for (let a of model.globalData.project_list) {
            if (a.id == did) {
                return a
            }
        }
    }
    /**打开个人主页 */
    _evt_openPersonalHomepage(id: string) {
        var pro_info = this.getProjectData(id);
        if (pro_info) {
            model.globalData.current_demand = pro_info;
            tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/project/PersonalHomePage'), (PersonalHomePage) => {
                //弹出详情页
                funs.loadPage(PersonalHomePage)
            })
        }
    }
    /**打开聊天室 */
    _evt_onlineChat(id: string) {
        var pro_info: any = this.getProjectData(id);
        if (pro_info) {
            model.globalData.current_demand = pro_info;
        }
        tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/ChatRoom'), (ChatRoom) => {
            if (ChatRoom.vpid.indexOf('uid=') > 0) {
                ChatRoom.vpid = ChatRoom.vpid.replace(/\?(uid=\d*)?/, '?uid=' + pro_info.user.id);
            } else {
                ChatRoom.vpid += '?uid=' + pro_info.user.id;
            }
            funs.loadPage(ChatRoom);
        });
    }
    /*================抢单逻辑－start===============*/
    _evt_grab(id: string) {
        var pro_info: any = this.getProjectData(id);
        if (pro_info) {
            model.globalData.current_demand = pro_info;
        }
        var that = this;
        let userInfo = model.globalData.user;
        let demandInfo = model.globalData.current_demand;
        if (userInfo.user_type == 100) {
            if (userInfo.avatar) {
                /** 暂时不需要工程商缴费，所以，此处正常逻辑先屏蔽 */
                // tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/grab/PayADepositModal'), (PayADepositModal) => {
                //     tdom.open(PayADepositModal, tdom.DialogTarget.Blank, {
                //         size: { width: '90%', height: tomato.DialogSize.Content },
                //         masked: true,
                //     });
                // });
                /** 暂时不需要工程商缴费，所以，此处正常逻辑先屏蔽 */

                // 临时逻辑－ start- /
                //抢单
                api.grabDemand({ "demand_id": demandInfo.id }, function (json) {
                    // 更新项目信息
                    var curr_pro = model.globalData.current_demand;
                    curr_pro.supplier_partic_status = json.demand_info.supplier_partic_status;
                    curr_pro.supplier_list = json.demand_info.partic_supplier_list;
                    curr_pro.bid_cnt = json.demand_info.demand.bid_cnt;
                    curr_pro.status = json.demand_info.demand.status;
                    curr_pro.user.phone = json.demand_info.user.mobile;

                    var pro_list = model.globalData.project_list;
                    // 更新项目列表中此项目的信息
                    for (var i = 0; i < pro_list.length; i++) {
                        if (curr_pro.id == pro_list[i].id) {
                            pro_list[i] = curr_pro;
                            break;
                        }
                    }
                    // 更新参与项目列表信息
                    let joined_list = model.globalData.joined_list;
                    let hasPro = false;
                    for (var i = 0; i < joined_list.length; i++) {
                        if (curr_pro.id == joined_list[i]) {
                            joined_list[i] = $.extend(joined_list[i], curr_pro);
                            hasPro = true;
                        }
                    }
                    if (!hasPro) {
                        joined_list.push(curr_pro);
                    }
                    // 自动拨打电话
                    window.location.href = 'tel:' + curr_pro.user.phone;
                },
                    function (data: tomato.PError) {
                        //如果请求失败,刷新当前
                        funs.tip('请求失败，请重试', data.note, 'fail');
                    })
                // 临时逻辑－ end- /
            } else {
                //弹出完善个人资料信息弹窗
                tomato.getVPresenter<UpdateSupplierInfo>(funs.moduleToUrl('m/user/UpdateSupplierInfo'), (UpdateSupplierInfo) => {
                    UpdateSupplierInfo.setType('1');
                    tdom.open(UpdateSupplierInfo, tdom.DialogTarget.Blank, {
                        size: { width: '90%', height: tomato.DialogSize.Content },
                        masked: true,
                    });
                });
            }
        } else {
            //当前登录信息与前端逻辑不合，直接刷新
            window.location.reload();
        }
    }
    /**=======================点赞---有用  开始=====================*/
    _evt_thumbsUp(id: string, data, target, hit) {
        var demand_id = id;
        //当前id项目的所有信息
        var pro_info = this.getProjectData(demand_id);
        //修改选中类型
        var that = this;
        var name = data.innerHTML;
        var flag = parseInt($(data).attr("flag"));
        if (!pro_info) {
            return;
        }
        var voteInfo = {
            id: demand_id,
            type: flag//投票类型，1：顶；2：踩；
        };
        if (pro_info.vote_type == 0) {
            //顶
            api.Vote(voteInfo, function (json) {
                // pro_info = json as any;
                that.resetDemand(json);
            }, function () {
                //fail
            })
        }
        if (pro_info.vote_type == flag) {
            //取消
            api.Unvote(voteInfo, function (json) {
                that.resetDemand(json);
            }, function () {
                //fail
            })
        }
    }
    resetDemand(json) {
        for (let a of model.globalData.project_list) {
            if (a.id == json.id) {
                a.vote_up = json.vote_up;
                a.vote_down = json.vote_down;
                a.vote_type = json.vote_type;
            }
        }
    }
    /**=======================点赞---有用  结束=====================*/
    /**关闭气泡 */
    _evt_TipHide() {
        this.find('.tip').addClass('hide');
    }
}
export = VPresenter;